# -*- coding: utf-8 -*-
# Generated by Django 1.9 on 2016-03-15 14:42
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import fernet_fields.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Application',
            fields=[
                ('added', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=60)),
                ('slug', models.SlugField(max_length=100, primary_key=True, serialize=False)),
                ('summary', models.TextField(blank=True, max_length=140, null=True)),
                ('maintainer', models.TextField(blank=True, max_length=2048, null=True)),
                ('description', models.TextField(blank=True, max_length=32767, null=True)),
                ('info_url', models.URLField(blank=True, max_length=2048, null=True)),
                ('icon_url', models.URLField(blank=True, max_length=2048, null=True)),
                ('frontend_component_path', models.TextField(blank=True, max_length=2048, null=True)),
                ('frontend_component_name', models.TextField(blank=True, max_length=2048, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ApplicationVersion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('version', models.CharField(max_length=30)),
                ('launch_data', models.TextField(blank=True, help_text='Instance user data to parameterize the launch.', max_length=16384, null=True)),
                ('application', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='versions', to='baselaunch.Application')),
            ],
        ),
        migrations.CreateModel(
            name='Cloud',
            fields=[
                ('added', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=60)),
                ('kind', models.CharField(default='cloud', editable=False, max_length=10)),
                ('slug', models.SlugField(primary_key=True, serialize=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Credentials',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('added', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=60)),
                ('default', models.BooleanField(help_text='If set, use as default credentials for the selected cloud')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='EC2',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('added', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=60)),
                ('ec2_region_name', models.CharField(max_length=100, verbose_name='EC2 region name')),
                ('ec2_region_endpoint', models.CharField(max_length=255, verbose_name='EC2 region endpoint')),
                ('ec2_conn_path', models.CharField(default='/', max_length=255, verbose_name='EC2 conn path')),
                ('ec2_is_secure', models.BooleanField(default=True, verbose_name='EC2 is secure')),
                ('ec2_port', models.IntegerField(blank=True, null=True, verbose_name='EC2 port')),
            ],
            options={
                'verbose_name': 'EC2',
                'verbose_name_plural': 'EC2',
            },
        ),
        migrations.CreateModel(
            name='Image',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('added', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=60)),
                ('image_id', models.CharField(max_length=50, verbose_name='Image ID')),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='S3',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('added', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=60)),
                ('s3_host', models.CharField(blank=True, max_length=255, null=True)),
                ('s3_conn_path', models.CharField(blank=True, default='/', max_length=255, null=True)),
                ('s3_is_secure', models.BooleanField(default=True)),
                ('s3_port', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'S3',
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('slug', models.SlugField(editable=False, primary_key=True, serialize=False, unique=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='AWS',
            fields=[
                ('cloud_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='baselaunch.Cloud')),
                ('compute', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='baselaunch.EC2')),
                ('object_store', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='baselaunch.S3')),
            ],
            options={
                'verbose_name': 'AWS',
                'verbose_name_plural': 'AWS',
            },
            bases=('baselaunch.cloud',),
        ),
        migrations.CreateModel(
            name='AWSCredentials',
            fields=[
                ('credentials_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='baselaunch.Credentials')),
                ('access_key', models.CharField(max_length=50)),
                ('secret_key', fernet_fields.fields.EncryptedCharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'verbose_name': 'AWS Credentials',
                'verbose_name_plural': 'AWS Credentials',
            },
            bases=('baselaunch.credentials',),
        ),
        migrations.CreateModel(
            name='CloudImage',
            fields=[
                ('image_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='baselaunch.Image')),
            ],
            options={
                'abstract': False,
            },
            bases=('baselaunch.image',),
        ),
        migrations.CreateModel(
            name='OpenStack',
            fields=[
                ('cloud_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='baselaunch.Cloud')),
                ('auth_url', models.CharField(max_length=255)),
                ('region_name', models.CharField(max_length=100)),
            ],
            options={
                'verbose_name': 'OpenStack',
                'verbose_name_plural': 'OpenStack',
            },
            bases=('baselaunch.cloud',),
        ),
        migrations.CreateModel(
            name='OpenStackCredentials',
            fields=[
                ('credentials_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='baselaunch.Credentials')),
                ('username', models.CharField(max_length=50)),
                ('password', fernet_fields.fields.EncryptedCharField(blank=True, max_length=50, null=True)),
                ('tenant_name', models.CharField(blank=True, max_length=50, null=True)),
                ('project_name', models.CharField(blank=True, max_length=50, null=True)),
                ('project_domain_name', models.CharField(blank=True, max_length=50, null=True)),
                ('user_domain_name', models.CharField(blank=True, max_length=50, null=True)),
                ('identity_api_version', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'OpenStack Credentials',
                'verbose_name_plural': 'OpenStack Credentials',
            },
            bases=('baselaunch.credentials',),
        ),
        migrations.AddField(
            model_name='credentials',
            name='cloud',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='credentials', to='baselaunch.Cloud'),
        ),
        migrations.AddField(
            model_name='credentials',
            name='user_profile',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='credentials', to='baselaunch.UserProfile'),
        ),
        migrations.AddField(
            model_name='applicationversion',
            name='images',
            field=models.ManyToManyField(blank=True, related_name='applications', to='baselaunch.Image'),
        ),
        migrations.AddField(
            model_name='cloudimage',
            name='cloud',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='baselaunch.Cloud'),
        ),
    ]
